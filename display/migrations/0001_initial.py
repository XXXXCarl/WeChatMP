# Generated by Django 4.2.7 on 2024-01-20 12:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("openid", models.CharField(max_length=128, verbose_name="用户ID")),
                (
                    "icon",
                    models.ImageField(
                        default="/icon/default.jpg/",
                        upload_to="icon",
                        verbose_name="用户头像",
                    ),
                ),
                ("telephone", models.CharField(max_length=11, verbose_name="手机号码")),
                ("nickname", models.CharField(max_length=128, verbose_name="用户昵称")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="MissingFamilyPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="失踪人姓名")),
                (
                    "sex",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "男"), (0, "女")], default=1, verbose_name="性别"
                    ),
                ),
                ("missing_date", models.DateField(verbose_name="失踪日期")),
                ("birth_date", models.DateField(verbose_name="出生日期")),
                ("detail_info", models.TextField(blank=True, verbose_name="详细信息")),
                (
                    "imgUrl",
                    models.ImageField(upload_to="upload/", verbose_name="失踪人照片"),
                ),
                (
                    "missing_place",
                    models.CharField(max_length=128, verbose_name="失踪地点"),
                ),
                ("phone_number", models.CharField(max_length=128, verbose_name="联系电话")),
                ("openid", models.CharField(max_length=128, verbose_name="用户ID")),
                ("likeNum", models.PositiveIntegerField(default=0, verbose_name="点赞数")),
                (
                    "collectNum",
                    models.PositiveIntegerField(default=0, verbose_name="收藏数"),
                ),
                (
                    "forwardNum",
                    models.PositiveIntegerField(default=0, verbose_name="转发数"),
                ),
                (
                    "release_date",
                    models.DateField(auto_now_add=True, verbose_name="发布日期"),
                ),
                ("timestamp", models.DateTimeField(auto_now=True, verbose_name="上传时间")),
            ],
        ),
        migrations.CreateModel(
            name="Verification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "applicant_type",
                    models.CharField(
                        choices=[
                            ("blue", "蓝V - 企业/机构认证"),
                            ("yellow", "黄V - 个人名誉认证"),
                            ("pink", "粉V - 寻亲人认证"),
                        ],
                        max_length=20,
                        verbose_name="申请类型",
                    ),
                ),
                ("application_text", models.TextField(verbose_name="申请说明")),
                (
                    "image_description",
                    models.ImageField(upload_to="verification/", verbose_name="图片说明"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Volunteer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        default="/volunteer/default.jpg/",
                        upload_to="volunteer",
                        verbose_name="志愿者照片",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="志愿者姓名")),
                (
                    "sex",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "男"), (0, "女")], verbose_name="性别"
                    ),
                ),
                ("college", models.CharField(max_length=128, verbose_name="学校")),
                ("birthday", models.DateField(verbose_name="出生日期")),
                ("address", models.CharField(max_length=128, verbose_name="家庭住址")),
                ("phone_number", models.CharField(max_length=128, verbose_name="联系电话")),
                ("reason", models.TextField(verbose_name="申请原因")),
                (
                    "is_passed",
                    models.BooleanField(default=False, verbose_name="审核是否通过"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CelebrityVerification",
            fields=[
                (
                    "verification_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="display.verification",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="姓名")),
            ],
            options={
                "verbose_name_plural": "黄V - 个人名誉认证",
            },
            bases=("display.verification",),
        ),
        migrations.CreateModel(
            name="EnterpriseVerification",
            fields=[
                (
                    "verification_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="display.verification",
                    ),
                ),
                (
                    "organization_name",
                    models.CharField(max_length=128, verbose_name="组织名称"),
                ),
                (
                    "organization_type",
                    models.CharField(max_length=128, verbose_name="组织性质"),
                ),
                (
                    "legal_representative",
                    models.CharField(max_length=128, verbose_name="法人姓名"),
                ),
                ("id_number", models.CharField(max_length=18, verbose_name="法人身份证号")),
                ("organization_intro", models.TextField(verbose_name="机构简介")),
            ],
            options={
                "verbose_name_plural": "蓝V - 企业/机构认证",
            },
            bases=("display.verification",),
        ),
        migrations.CreateModel(
            name="MissingPersonVerification",
            fields=[
                (
                    "verification_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="display.verification",
                    ),
                ),
                ("parent_name", models.CharField(max_length=128, verbose_name="家长姓名")),
                (
                    "parent_id_number",
                    models.CharField(max_length=18, verbose_name="身份证号"),
                ),
                ("child_name", models.CharField(max_length=128, verbose_name="孩子姓名")),
                (
                    "child_id_number",
                    models.CharField(max_length=18, verbose_name="身份证号"),
                ),
            ],
            options={
                "verbose_name_plural": "粉V - 寻亲人认证",
            },
            bases=("display.verification",),
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "followees",
                    models.ManyToManyField(
                        related_name="followees",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="我关注的",
                    ),
                ),
                (
                    "followers",
                    models.ManyToManyField(
                        related_name="followers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="关注我的",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LikePost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="display.missingfamilypost",
                        verbose_name="被点赞帖子",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="点赞者",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ForwardPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="display.missingfamilypost",
                        verbose_name="被转发帖子",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="转发者",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Feedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(verbose_name="反馈内容")),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="反馈时间"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(verbose_name="评论内容")),
                ("time", models.DateTimeField(auto_now_add=True, verbose_name="评论时间")),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="评论者",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="display.missingfamilypost",
                        verbose_name="被评论文章",
                    ),
                ),
                (
                    "pre_comment",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="display.comment",
                        verbose_name="父评论ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CollectPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="display.missingfamilypost",
                        verbose_name="被收藏帖子",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="收藏者",
                    ),
                ),
            ],
        ),
    ]
